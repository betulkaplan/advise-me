import LoadingWrapper from "@/components/LoadingWrapper";
import ConfirmModal from "@/components/modals/ConfirmModal";
import CreatePostModal from "@/components/modals/CreatePostModal";
import PostCard from "@/components/PostCard";
import { PostWithuser } from "@/types/commons";
import useAxios from "axios-hooks";
import Head from "next/head";
import { useState } from "react";
import { toast } from "react-toastify";

export default function Home() {
  const [isOpenModal, setIsOpenModal] = useState(false);
  const [isOpenDeletePostModal, setDeletePostModal] = useState<boolean>(false);
  const [activePost, setActivePost] = useState<PostWithuser | undefined>(
    undefined
  );

  const [{ data: posts, loading }, refetchUsers] = useAxios<PostWithuser[]>(
    "api/post",
    { useCache: false }
  );
  const [{ loading: deleteLoading }, executeDeletePost] = useAxios(
    { url: `api/post/${activePost?.id}`, method: "DELETE" },
    {
      useCache: false,
      manual: true,
    }
  );

  return (
    <>
      <Head>
        <title>Advise Me - Posts </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="p-3">
        <CreatePostModal
          isOpen={isOpenModal}
          onClose={() => setIsOpenModal(false)}
          onCreate={() => {
            setIsOpenModal(false);
            refetchUsers();
          }}
        />
        <ConfirmModal
          isOpen={isOpenDeletePostModal}
          onClose={() => {
            setDeletePostModal(false);
            setActivePost(undefined);
          }}
          onConfirm={() => {
            executeDeletePost().then(() => {
              setDeletePostModal(false);
              setActivePost(undefined);
              refetchUsers();
            });
          }}
        />

        <button
          onClick={() => setIsOpenModal(true)}
          className="bg-blue-500 p-2 text-white rounded-md"
        >
          Create Post
        </button>
        <div className="grid grid-cols-5 gap-3 mt-2">
          <LoadingWrapper isLoading={loading}>
            {posts?.map((post) => {
              return (
                <div
                  onClick={() => {
                    setActivePost(post);
                    setDeletePostModal(true);
                  }}
                  key={post.id}
                >
                  <PostCard post={post} />
                </div>
              );
            })}
          </LoadingWrapper>
        </div>
      </main>
    </>
  );
}
